{"version":3,"sources":["App.js","index.js"],"names":["api","process","App","useState","query","setQuery","weather","setWeather","d","Date","minutes","getMinutes","hours","getHours","dayOfWeek","getDay","day","getDate","month","getMonth","year","getFullYear","ampm","time","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","res","json","result","size","color","name","sys","country","style","display","marginBottom","justifyContent","Math","round","src","icon","alt","humidity","wind","speed","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAIMA,EACCC,mCADDD,EAEC,2CAyIQE,MAtIf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAeTC,EAAI,IAAIC,KAwBRC,EAAUF,EAAEG,aACZC,EAAQJ,EAAEK,WACVC,EAXa,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YAIyBN,EAAEO,UACzBC,EAAMR,EAAES,UACRC,EA3BS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAeiBV,EAAEW,YACjBC,EAAOZ,EAAEa,cACTC,EAAOV,GAAS,GAAK,KAAO,KAI5BW,GAFJX,GADAA,GAAS,KACe,IAEL,KADnBF,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACN,IAAMY,EAEzC,OACE,yBACEE,UACyB,oBAAhBlB,EAAQmB,KACXnB,EAAQmB,KAAKC,KAAO,GAClB,UACA,UACF,MAGN,8BACE,yBAAKF,UAAU,cACb,2BACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOzB,EAASyB,EAAEC,OAAOC,QACnCA,MAAO5B,EACP6B,WAjEK,SAACC,GACI,UAAdA,EAAMC,KACRC,MAAM,GAAD,OAAIpC,EAAJ,qBAAwBI,EAAxB,oCAAyDJ,IAC3DqC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLjC,EAAWiC,GACXnC,EAAS,WA8Da,oBAAhBC,EAAQmB,KACd,6BACE,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAYiB,KAAM,GAAIC,MAAM,YAC3BpC,EAAQqC,KAFX,KAEmBrC,EAAQsC,IAAIC,SAE/B,yBAAKrB,UAAU,QAAQV,GACvB,yBAAKU,UAAU,QACZR,EADH,IACSE,EADT,IACiBE,GAEjB,yBAAKI,UAAU,QAAQD,GACvB,yBACEuB,MAAO,CACLC,QAAS,OACTC,aAAc,OACdC,eAAgB,iBAGlB,yBAAKzB,UAAU,qBACb,0BAAMA,UAAU,gBAAhB,eACA,6BACA,8BAAO0B,KAAKC,MAAM7C,EAAQmB,KAAKC,MAA/B,UAEF,yBAAKF,UAAU,qBACb,0BAAMA,UAAU,gBACblB,EAAQA,QAAQ,GAAGmB,MAEtB,6BACA,8BACE,yBACE2B,IAAG,2CAAsC9C,EAAQA,QAAQ,GAAG+C,KAAzD,QACHC,IAAI,QAKZ,yBAAKR,MAAO,CAAEC,QAAS,OAAQE,eAAgB,iBAC7C,yBAAKzB,UAAU,qBACb,0BAAMA,UAAU,gBAAhB,YACA,6BACA,8BAAOlB,EAAQmB,KAAK8B,SAApB,MAEF,yBAAK/B,UAAU,qBACb,0BAAMA,UAAU,gBAAhB,QACA,6BACA,8BACG0B,KAAKC,MAAM7C,EAAQkD,KAAKC,OACzB,0BAAMX,MAAO,CAAEY,SAAU,SAAzB,YAOV,MCnIVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5f799225.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { GoLocation } from \"react-icons/go\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  url: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.url}weather?q=${query},US&units=imperial&appid=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n        });\n    }\n  };\n\n  let d = new Date();\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let daysOfWeek = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let minutes = d.getMinutes();\n  let hours = d.getHours();\n  let dayOfWeek = daysOfWeek[d.getDay()];\n  let day = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  let ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours %= 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  let time = hours + \":\" + minutes + \" \" + ampm;\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 72\n            ? \"bg warm\"\n            : \"bg cold\"\n          : \"bg\"\n      }\n    >\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                <GoLocation size={31} color=\"#a33a33\" />\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{dayOfWeek}</div>\n              <div className=\"date\">\n                {day} {month} {year}\n              </div>\n              <div className=\"time\">{time}</div>\n              <div\n                style={{\n                  display: \"flex\",\n                  marginBottom: \"70px\",\n                  justifyContent: \"space-around\",\n                }}\n              >\n                <div className=\"display-container\">\n                  <span className=\"display-name\">Temperature</span>\n                  <br />\n                  <span>{Math.round(weather.main.temp)}Â°F</span>\n                </div>\n                <div className=\"display-container\">\n                  <span className=\"display-name\">\n                    {weather.weather[0].main}\n                  </span>\n                  <br />\n                  <span>\n                    <img\n                      src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                      alt=\"\"\n                    />\n                  </span>\n                </div>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <div className=\"display-container\">\n                  <span className=\"display-name\">Humidity</span>\n                  <br />\n                  <span>{weather.main.humidity}%</span>\n                </div>\n                <div className=\"display-container\">\n                  <span className=\"display-name\">Wind</span>\n                  <br />\n                  <span>\n                    {Math.round(weather.wind.speed)}\n                    <span style={{ fontSize: \"20px\" }}>mph</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}